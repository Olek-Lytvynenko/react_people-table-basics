{"version":3,"sources":["Pages/HomePage.tsx","Pages/NotFoundPage.tsx","components/PersonLink.tsx","components/PersonTable.tsx","components/Loader/Loader.tsx","api.ts","Pages/PeoplePage.tsx","components/NavBar.tsx","App.tsx","index.tsx"],"names":["HomePage","className","NotFoundPage","PersonLink","person","name","slug","isWomen","sex","to","classNames","PersonTable","persons","useParams","map","born","died","mother","motherName","father","fatherName","Loader","API_URL","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PeoplePage","useState","peoples","setPeoples","isLoading","setIsloading","isErorrOnLoadPeople","setIsErorrOnLoadPeople","isNoPeopleOnServer","setIsNoPeopleOnServer","loadPeople","result","personWithParents","find","m","f","length","useEffect","NavBar","role","isActive","App","path","element","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.789954d7.chunk.js","sourcesContent":["import React from 'react';\n\nexport const HomePage: React.FC = () => {\n  return (\n    <div className=\"section\">\n      <div className=\"container\">\n        <h1 className=\"title\">Home Page</h1>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\n\nexport const NotFoundPage: React.FC = () => {\n  return (\n    <div className=\"section\">\n      <div className=\"container\">\n        <p>Page not found</p>\n      </div>\n    </div>\n  );\n};\n","import classNames from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../types/Person';\n\ntype Props = {\n  person: Person;\n};\n\nexport const PersonLink: React.FC<Props> = ({ person }) => {\n  const { name, slug } = person;\n  const isWomen = person.sex === 'f';\n\n  return (\n    <Link\n      to={slug}\n      className={classNames('', {\n        'has-text-danger': isWomen,\n      })}\n    >\n      {name}\n    </Link>\n  );\n};\n","import classNames from 'classnames';\nimport { useParams } from 'react-router-dom';\nimport { Person } from '../types/Person';\nimport { PersonLink } from './PersonLink';\n\ntype Props = {\n  persons: Person[];\n};\nexport const PersonTable: React.FC<Props> = ({ persons }) => {\n  const { slug } = useParams();\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {persons.map(person => (\n          <tr\n            data-cy=\"person\"\n            key={person.slug}\n            className={classNames({\n              'has-background-warning': person.slug === slug,\n            })}\n          >\n            <td><PersonLink person={person} /></td>\n\n            <td>{person.sex}</td>\n            <td>{person.born}</td>\n            <td>{person.died}</td>\n            <td>\n              {person.mother\n                ? <PersonLink person={person.mother} />\n                : person.motherName || '-'}\n            </td>\n            <td>\n              {person.father\n                ? <PersonLink person={person.father} />\n                : person.fatherName || '-'}\n            </td>\n          </tr>\n\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL\n  = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise((resolve) => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then((response) => response.json());\n}\n","import { useEffect, useState } from 'react';\nimport { PersonTable } from '../components/PersonTable';\nimport { Loader } from '../components/Loader';\nimport { Person } from '../types';\nimport { getPeople } from '../api';\n\nexport const PeoplePage = () => {\n  const [peoples, setPeoples] = useState<Person[]>([]);\n  const [isLoading, setIsloading] = useState(false);\n  const [isErorrOnLoadPeople, setIsErorrOnLoadPeople] = useState(false);\n  const [isNoPeopleOnServer, setIsNoPeopleOnServer] = useState(false);\n\n  const loadPeople = async () => {\n    setIsloading(true);\n\n    try {\n      setIsErorrOnLoadPeople(false);\n\n      const result = await getPeople();\n\n      const personWithParents = result.map(person => {\n        const mother = result.find(m => m.name === person.motherName);\n        const father = result.find(f => f.name === person.fatherName);\n\n        return { ...person, mother, father };\n      });\n\n      if (result.length !== 0) {\n        setPeoples(personWithParents);\n      } else {\n        setIsNoPeopleOnServer(true);\n      }\n    } catch {\n      setIsErorrOnLoadPeople(true);\n    } finally {\n      setIsloading(false);\n    }\n  };\n\n  useEffect(() => {\n    loadPeople();\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && <Loader />}\n\n          {isErorrOnLoadPeople && (\n            <p\n              data-cy=\"peopleLoadingError\"\n              className=\"has-text-danger\"\n            >\n              Something went wrong\n            </p>\n          )}\n\n          {isNoPeopleOnServer && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n\n          {!isLoading && (\n            <PersonTable\n              persons={peoples}\n            />\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","import classNames from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\nexport const NavBar = () => {\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            className={({ isActive }) => {\n              return classNames('navbar-item', {\n                'has-background-grey-lighter': isActive,\n              });\n            }}\n            to=\"/\"\n          >\n            Home\n          </NavLink>\n\n          <NavLink\n            className={({ isActive }) => {\n              return classNames('navbar-item', {\n                'has-background-grey-lighter': isActive,\n              });\n            }}\n            to=\"/people\"\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import './App.scss';\nimport {\n  Navigate,\n  Route,\n  Routes,\n} from 'react-router-dom';\nimport { HomePage } from './Pages/HomePage';\nimport { NotFoundPage } from './Pages/NotFoundPage';\nimport { PeoplePage } from './Pages/PeoplePage';\nimport { NavBar } from './components/NavBar';\n\nexport const App = () => {\n  return (\n    <div data-cy=\"app\">\n\n      <NavBar />\n\n      <main className=\"section\">\n        <Routes>\n          <Route path=\"/\" element={<HomePage />} />\n          <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n          <Route path=\"/people\" element={<PeoplePage />}>\n            <Route path=\":slug\" element={<PeoplePage />} />\n          </Route>\n          <Route path=\"*\" element={<NotFoundPage />} />\n        </Routes>\n      </main>\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}